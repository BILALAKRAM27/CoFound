"""
Django settings for CoFound project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-gdp2z1&ojq26x1w9zn4e7)_0cn5@86s$s%#67!j_gz7n#+f2m0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['testserver', 'localhost', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    
    # OAuth Authentication
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.linkedin_oauth2',
    'allauth.socialaccount.providers.twitter_oauth2',
    'allauth.socialaccount.providers.apple',
    
    # Project Apps
    'Entrepreneurs',
    'Investors',
    'rest_framework',
    'channels',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# OAuth Authentication Settings
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

SITE_ID = 1

# Allauth Settings
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = 'none'  # Set to 'mandatory' if you want email verification
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_USERNAME_BLACKLIST = []
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_SUBJECT_PREFIX = '[CoFound] '
ACCOUNT_DEFAULT_HTTP_PROTOCOL = 'http'  # Change to 'https' in production

# Allauth Redirect Settings (these work with the main LOGIN_URL setting)
ACCOUNT_LOGIN_ON_GET = False
ACCOUNT_LOGOUT_ON_GET = True
ACCOUNT_LOGOUT_REDIRECT_URL = '/'
ACCOUNT_SIGNUP_REDIRECT_URL = '/home/'

# Social Account Settings
SOCIALACCOUNT_AUTO_SIGNUP = False
SOCIALACCOUNT_EMAIL_REQUIRED = True
SOCIALACCOUNT_EMAIL_VERIFICATION = 'none'

# Custom Allauth Adapters for No-Username User Model
ACCOUNT_ADAPTER = 'Entrepreneurs.adapters.NoUsernameAccountAdapter'
SOCIALACCOUNT_ADAPTER = 'Entrepreneurs.adapters.NoUsernameSocialAccountAdapter'
ACCOUNT_FORMS = {
    'signup': 'Entrepreneurs.adapters.NoUsernameSignupForm',
}
SOCIALACCOUNT_FORMS = {
    'signup': 'Entrepreneurs.adapters.NoUsernameSocialSignupForm',
}

# Authentication Redirect Settings
LOGIN_URL = '/'  # Redirect to landing page (root URL) when login is required
LOGIN_REDIRECT_URL = '/home/'  # Where to redirect after successful login
LOGOUT_REDIRECT_URL = '/'  # Where to redirect after logout

# OAuth Provider Settings
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        },
        'OAUTH_PKCE_ENABLED': True,
    },
    'linkedin_oauth2': {
        'SCOPE': [
            'r_liteprofile',
            'r_emailaddress',
        ],
        'PROFILE_FIELDS': [
            'id',
            'first-name',
            'last-name',
            'email-address',
            'picture-url',
            'public-profile-url',
        ],
    },
    'twitter_oauth2': {
        'SCOPE': [
            'tweet.read',
            'users.read',
        ],
        'AUTH_PARAMS': {
            'response_type': 'code',
        },
    },
    'apple': {
        'SCOPE': [
            'name',
            'email',
        ],
        'AUTH_PARAMS': {
            'response_mode': 'form_post',
        },
    },
}

ROOT_URLCONF = 'CoFound.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',
            BASE_DIR / 'Investors' / 'templates',
            BASE_DIR / 'Entrepreneurs' / 'templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'CoFound.context_processors.user_profile_context',
            ],
        },
    },
]

WSGI_APPLICATION = 'CoFound.wsgi.application'

ASGI_APPLICATION = 'CoFound.asgi.application'

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer',
    },
}


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Custom User Model
AUTH_USER_MODEL = 'Entrepreneurs.User'

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

STATICFILES_DIRS = [
    BASE_DIR / 'static',
    BASE_DIR / 'Investors' / 'static',
]

# Ensure static files are served in development
if DEBUG:
    STATICFILES_FINDERS = [
        'django.contrib.staticfiles.finders.FileSystemFinder',
        'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    ]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
