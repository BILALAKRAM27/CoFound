# Generated by Django 5.2.4 on 2025-08-17 11:02

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Entrepreneurs', '0002_industry_remove_entrepreneurprofile_profile_image_and_more'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('image', models.BinaryField(blank=True, editable=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='activitylog',
            options={'ordering': ['-timestamp']},
        ),
        migrations.AlterModelOptions(
            name='collaborationrequest',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='favorite',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='industry',
            options={'ordering': ['name'], 'verbose_name_plural': 'Industries'},
        ),
        migrations.AlterModelOptions(
            name='notification',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='review',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='startup',
            options={'ordering': ['-created_at', 'name']},
        ),
        migrations.AlterUniqueTogether(
            name='collaborationrequest',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='startupdocument',
            name='file',
        ),
        migrations.AddField(
            model_name='startup',
            name='logo',
            field=models.BinaryField(blank=True, editable=True, null=True),
        ),
        migrations.AddField(
            model_name='startupdocument',
            name='file_data',
            field=models.BinaryField(blank=True, editable=True, null=True),
        ),
        migrations.AddField(
            model_name='startupdocument',
            name='file_name',
            field=models.CharField(default=django.utils.timezone.now, max_length=255),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='startupdocument',
            name='file_type',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AlterField(
            model_name='activitylog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to='Entrepreneurs.user'),
        ),
        migrations.AlterField(
            model_name='collaborationrequest',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='pending', max_length=10),
        ),
        migrations.AlterField(
            model_name='entrepreneurprofile',
            name='image',
            field=models.BinaryField(blank=True, editable=True, null=True),
        ),
        migrations.AlterField(
            model_name='entrepreneurprofile',
            name='industries',
            field=models.ManyToManyField(blank=True, related_name='entrepreneurs', to='Entrepreneurs.industry'),
        ),
        migrations.AlterField(
            model_name='entrepreneurprofile',
            name='team_size',
            field=models.PositiveIntegerField(default=1),
        ),
        migrations.AlterField(
            model_name='entrepreneurprofile',
            name='user',
            field=models.OneToOneField(limit_choices_to={'role': 'entrepreneur'}, on_delete=django.db.models.deletion.CASCADE, related_name='entrepreneur_profile', to='Entrepreneurs.user'),
        ),
        migrations.AlterField(
            model_name='review',
            name='entrepreneur',
            field=models.ForeignKey(limit_choices_to={'role': 'entrepreneur'}, on_delete=django.db.models.deletion.CASCADE, related_name='received_reviews', to='Entrepreneurs.user'),
        ),
        migrations.AlterField(
            model_name='startup',
            name='entrepreneur',
            field=models.ForeignKey(limit_choices_to={'role': 'entrepreneur'}, on_delete=django.db.models.deletion.CASCADE, related_name='startups', to='Entrepreneurs.user'),
        ),
        migrations.AlterField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='entrepreneurs_user_set', related_query_name='entrepreneurs_user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='entrepreneurs_user_set', related_query_name='entrepreneurs_user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddConstraint(
            model_name='collaborationrequest',
            constraint=models.UniqueConstraint(condition=models.Q(('status', 'pending')), fields=('investor', 'entrepreneur'), name='unique_pending_collaboration_request'),
        ),
        migrations.AddField(
            model_name='comment',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='Entrepreneurs.user'),
        ),
        migrations.AddField(
            model_name='post',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='Entrepreneurs.user'),
        ),
        migrations.AddField(
            model_name='post',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='liked_posts', to='Entrepreneurs.user'),
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='Entrepreneurs.post'),
        ),
    ]
